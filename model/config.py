# -*- coding: utf-8 -*-

import codecs
import numpy as np


class Config(object):
    def __init__(self):
        self.level = "word"  # which level of input sequence len to use, options are 'word', 'char'
        self.batch_size = 128  # how many samples to train in one time
        self.num_epochs = 50  # max epochs to run
        self.learning_rate = 0.001
        self.optimizer = "adam"  # optimizer to train the model by optimizing loss function
        self.model_type = None  # options are "aspect", "senti", "joint"
        self.joint_model_type = None  # model type for joint model
        self.aspect_model_type = None   # model type for aspect classification model
        self.senti_model_type = None    # model type for sentiment analysis model
        self.exp_name = None  # experience name (also model name)

        self.checkpoint_dir = "model"  # the model will be saved under 'model' directory
        self.checkpoint_monitor = "val_f1"  # the metric we monitor
        self.checkpoint_mode = "max"  # save the model with max f1_macro value
        self.checkpoint_save_best_only = True
        self.checkpoint_save_weights_only = True
        self.checkpoint_verbose = True

        self.early_stopping_monitor = 'val_f1'
        self.early_stopping_patience = 5
        self.early_stopping_mode = 'max'

        # max sequence len of different level, the value is set according to the length's distribution,
        # see data_analysis.md for details
        self.max_len_word = 128     # i just use max in final
        self.max_len_char = 200     # i just use max in final
        self.max_len = {'word': self.max_len_word,
                        'char': self.max_len_char
                        }  # max input sequence length

        self.embedding_dim = 300  # word embedding dimension
        self.aspect_embed_dim = 100     # aspect embedding dimension
        self.dropout = 0.5  # probability to dropout(set output value to 0)

        self.n_aspect = 10  # how many aspects(fine-grained)
        self.n_senti_class = 3  # how many sentiment classes: positive, negative, neural, (not exist)

        # how many class to classify (vary with different model)
        self.n_class = {'aspect': self.n_aspect,    # aspect classification model
                        'senti': self.n_senti_class,    # sentiment analysis model
                        'joint': self.n_aspect * (self.n_senti_class + 1)
                        }

        self.aspect_names_en = ['power', 'price', 'decor', 'config', 'safety', 'appear', 'control', 'oil_cost', 'space', 'comfort']
        self.aspect_names = ['动力', '价格', '内饰', '配置', '安全性', '外观', '操控', '油耗', '空间', '舒适性']
        self.aspect_names_to_class = dict((aspect_name, idx) for idx, aspect_name in enumerate(self.aspect_names))

        self.joint_polarity_to_class = {-2: 0, -1: 1, 0: 2, 1: 3}
        self.join_class_to_polarity = dict((cls, pol) for pol, cls in self.joint_polarity_to_class.items())

        self.senti_polarity_to_class = {-1: 0, 0: 1, 1: 2}
        self.senti_class_to_polarity = dict((cls, pol) for pol, cls in self.senti_polarity_to_class.items())

        # self.aspect_to_keyword = {'动力': ['起步', '四驱', '发动机', '烧机油', '急加速'],
        #                           '价格': ['变相加价', '总价', '特别便宜', '三万八', '价格', '23万一千八'],
        #                           '内饰': ['坐垫', '座椅'],
        #                           '配置': ['后排空调出风口', '后排出风口', '中控', '主机', '功放', '三分频', '配置', '大灯',
        #                                  '无钥匙'],
        #                           '安全性': ['安全隐患', '刹车灯', '特别安全'],
        #                           '外观': ['油漆', '崩漆', '日行灯', '转向灯', '白色', '线条', '淡绿', '色差', '尾灯', '车漆',
        #                                  '车身硬度', '大屁股'],
        #                           '操控': ['四轮定位', '防爆胎', '方向感'],
        #                           '油耗': ['油耗', '由耗', '纯市区', '纯汽油', '省油！', '费油'],
        #                           '空间': ['后排座位'],
        #                           '舒适性': ['异响', '不响', '噪音', '压缩机', '后窗', '胎压', '舒适性']
        #                           }
        # self.aspect_neg_words = {'动力': ['肉的不行', '够快'],
        #                          '价格': ['变相加价', '特别便宜'],
        #                          '内饰': [],
        #                          '配置': [],
        #                          '安全性': ['不安全'],
        #                          '外观': ['崩漆', '设计太失败', '惨不忍睹', '难看'],
        #                          '操控': [],
        #                          '油耗': ['冬天就是费油'],
        #                          '空间': [],
        #                          '舒适性': ['不响才怪', '也差', '太头疼']
        #                          }
        # self.aspect_pos_words = {'动力': ['错不了', '很好'],
        #                          '价格': [],
        #                          '内饰': ['很好看'],
        #                          '配置': ['强些'],
        #                          '安全性': [],
        #                          '外观': ['硬朗', '太美', '强多了'],
        #                          '操控': [],
        #                          '油耗': ['省油！'],
        #                          '空间': [],
        #                          '舒适性': []
        #                          }

        self.aspect_to_keyword = {'动力': ['动力', '发动机', '机油', '动力', '四驱', '烧机油', '变速箱', '转速', '加速', '水平对置',
                                         'cvt', ],
                                  '价格': ['价格', '优惠', '便宜', '性价比', '实惠', '售价', '降价', '价钱', '价位', '预算', '报价'],
                                  '内饰': ['内饰', '座椅'],
                                  '配置': ['配置', '导航', '中控', ''],
                                  '安全性': ['安全', '急刹车', '追尾', '刹车', '安全性', '气囊'],
                                  '外观': ['外观', '颜色', '好看', '丑', '车漆', '前脸', '外形', '美', '漂亮', '难看', '颜值'],
                                  '操控': ['操控', '失控', '手动挡', '自动挡', '漂移', '甩尾', '方向盘', '操作灵活'],
                                  '油耗': ['油耗', '节油', '省油', '费油', '满箱油全', '油表', '95油', '98油', '97油',
                                         '柴油', '汽油', '油箱', '加油', '油桶'],
                                  '空间': ['后备箱', '空间大', '后排', '空间'],
                                  '舒适性': ['噪音', '异响', '轮胎', '空调', '舒适性']
                                  }
        self.aspect_neg_words = {'动力': ['不选', '质量不行', '很一般',
                                        '故障', '变闷', '受不了', '缝隙里油泥不好搞',
                                        '没有以前灵敏', '有点受不了', '弱', '太差', '降低动力', '没动力',
                                        '好不到哪去', '机油不好', '没有', '差', '噪音大', '查不出', '不擅长', '鸡肋',
                                        '风险很大', '急加速不行', '漏油', '比不了', '发动机一直是弊病', '轻微渗油', '别指望',
                                        '发动机没力', '肯定烧', '差点', '变弱', '别提了', '发动机嘶哑', '异响',
                                        '爬坡也爬不上去', '很差', '怕动力不够', '动力弱', '差很远', '垃圾', '车重',
                                        '动力不够', '牛车', '通病', '缺陷', '温度高', '噪音', '变速箱落后是真的', '抖动',
                                        '维修起来麻烦', '动力下降', '偶尔有顿挫', '有点降低', '动力不行', '反应慢', '不够',
                                        '肉', '转速低', '降低', '失望', '烧机油', '压力大', '不足', '不完善', '不太行',
                                        '加速缓慢', '有问题', '渗油', '偏弱', '弱了点', '不好受', '偏磨', '加速抖动',
                                        '不如之前', '下降', '捉急', '心理没底', '没', '锁死', '老坏', '涉水', '跟不上',
                                        '差点意思', '逊色', '机油消耗', '差的不是一点', '降了', '败笔', '发动机烧漏机油风险大',
                                        '不佳', '连速腾起步都赶不上', '设计缺陷', '减少', '后段不行', '不好',
                                        '变速箱大众调教得很差', '太弱', '差的不是一点点', '发动机噪声大', '不咋地',
                                        '有点烧机油', '下机油', '牛b了', '坑', '不行', '发动机异味', '不够用',
                                        '太吵', '怕', '慢', '急加速问题', '有一个缸体不工作，严重抖动',
                                        '发动机实在太老', '飙车差劲', '变速箱差', '感觉不到', '下降明显', '不会很快',
                                        '没什么亮点', '担心', '差些', '发动机存在问题', '动力呵呵', '代价大', '不如',
                                        '硬伤', '郁闷', '负担大', '严重烧机油', '熄火', '动力不足'],
                                 '价格': ['太贵了', '单价高', '保养价格贵', '价格老贵了', '有钱任性', '不高', '才优惠',
                                        '奇高', '只优惠', '不合适', '贵一点', '贵', '价格贵', '小贵', '价格较高', '不合算',
                                        '不菲', '高昂', '不值', '高了好多', '给个更便宜的价格',
                                        '便宜', '也贵', '贵了', '贵太多', '没有优势',
                                        '降价还是不要想了', '价格太贵', '售价明显高于竞品', '放弃', '咬咬牙的', '价格高',
                                        '高', '不便宜', '不平易近人', '优惠太小', '没法比', '虚高', '保值率还是大众好一些',
                                        '死硬', '略贵', '不用考虑了', '高了', '不靠谱', '价格不合适', '不会便宜', '套路',
                                        '性价比不算很高', '没啥优惠', '价格过高', '下不来', '挺高', '不好'],
                                 '内饰': ['全塑料', '设计感土土的', '挫', '有啥用', '不咋地', '粗糙', '不敢恭维',
                                        '后排座椅 格叽格叽响', '渣', '硬', '太水',
                                        '内饰太寒酸', '松垮', '内饰全塑料', '内饰低档', '没戏', '做工粗糙',
                                        '如此的廉价的感觉', '又硬又凸', '较差', '伤感情', '脱皮', '差一点', '不能接受',
                                        '掉渣', '内饰太L0W', '简陋', '改了也不够', '内饰要吐', '破破烂烂的',
                                        '非常一般', '有点难受', '落后', '单调', '完败', '没用', '座椅臭味', '多丑',
                                        '不如现款', '内饰有廉价感', '糙', '不舒坦', '一般', '太差', '有缺点', '磕碜了点',
                                        '科技感也是一如既往的差 ', '惨不忍睹', '不豪华', '吐槽', '不如', '硬伤', '差',
                                        '不细致', '没得比', '不是一个档次', '不改改', '令人发指', '扯淡', '有些粗', '不够整',
                                        '旧', '内饰太老气', '渣渣', '内饰简陋',
                                        '内饰太过简单粗糟', '异味', '过时', '有点糙'],
                                 '配置': ['差', '国内减配', '后悔', '没优势', '没落锁', '不让人省心',
                                        '山寨', '不高', '没必要', '不太重视', '音质不行', '差点',
                                        '太垃圾', '卡死', '不咋样', '不值得', '中控差', '不选', '很差', '比不上',
                                        '主导航垃圾', '差一点', '不方便', '丑到无力吐槽', '配置比较低', '黑', '有点抖', '鸡肋',
                                        '不能忍', '简配太厉害', '不喜欢', '掉了链子', '结实', '太扯了', '坑',
                                        '缺失遗憾', '不实用', '电动尾门太慢', '车载导航带到沟里', '断轴',
                                        '低', '机舱里走管子不好走', '没区别', '不值钱', '惨不忍睹', '看不上眼', '没有', '坑爹',
                                        '有声音', '吐槽', '不如', '不行', '黑屏', '贵', '中控山寨', '早日完蛋',
                                        '垃圾导航', '垃圾', '挫', '不值', '硬伤', '没', '配置简陋'],
                                 '安全性': ['心寒', '不强', '刹车软', '差点追尾', '恼人', '急刹车', '刹不住', '有问题', '软',
                                         '不行', '能比', '刹车软，刹车行程距离长', '无奈', '不给力', '不耐磨', '怎么这么软',
                                         '少了5个气囊', '差劲', '刹不住、软', '醉了'],
                                 '外观': ['不咋地 ', '有点土', '挫', '不协调', '不敢恭维', '好难看', '差很多', '廉价', '挫样',
                                        '硬', '日系车漆软', '外观没有丝毫质感！    ', '接受不了', '差点', '变色', '倾斜大',
                                        '还是现款好看', '摇晃', '不像换代应有的水平', '取消', '不符合', '毁所有', '软', '平庸',
                                        '不好看', '车漆薄', '颜值差', '外观太小气', '真难看', '尾灯好丑', '怎么看都不协调',
                                        '纠结', '外观太丑', '漆面太薄', '不怎么好看', '难看', '车漆软', '小',
                                        '里外不一', '老气', '拼凑杀马特', '屁股很不喜欢', '硬伤', '丑', '差',
                                        '史上最难看', '越丑', '前脸无爱', '无力吐槽', '低级无下限', '外观奇丑无比', '不咋新潮',
                                        '平淡无奇平庸无比', '接受度不高', '中网丑', '车漆真软', '车漆薄，软',
                                        '觉得19款没有老款好看', '多丑', '镀铬太多 让人尴尬'],
                                 '操控': ['比不上', '廉价', '差很多', '静音不好', '无法比', '有点抖',
                                        '很一般', '废刹车', '脱皮', '开起来实在是….', '刹车盘', '渗油', '多余的', '重一点',
                                        '异响', '离地间隙低', '方向好飘，方向盘总是要不断修正方向', '完败', '抖', '掉漆',
                                        '底盘漏油', '无解', '偏了', '响', '车身的反应较迟钝。', '刹车怎么这么软呢  ',
                                        '磨得发亮', '味道真不小', '垃圾', '刹不住',
                                        '刺拉拉', '太差', '嘎嘎响', '底盘不是很紧凑 ', '走烂路很颠',
                                        '就是底盘太高了，过坑瞬间比轿车晃动大    ', '通病', '不如', '差', '颠簸', '承受不起',
                                        '高度只有180mm', '手感差', '不佳', '没那么好', '就那么回事', '需要一直微调', '很危险',
                                        '方向盘飘', '差劲', '不好'],
                                 '油耗': ['高了点', '费油', '不可能低', '大些', '1.8T油耗不低', '不公平',
                                        '高很多', '油耗蹭蹭的往上涨', '油耗会上升', '全行业造假', '油耗有上升', '油耗造假',
                                        '颇高', '增加油耗', '油耗太高', '很高', '油耗增加', '上升', '油耗高', '太高', '完败',
                                        '油耗大', '偏大', '不着调', '略高', '爱咋滴就咋滴', '不好', '大', '比以前多', '高点',
                                        '油耗不好控制', '升高', '高', '性价比低', '特大', '还得', '油耗上升', '高一点',
                                        '真不喜欢', '增加', '油耗确实很高', '贼高', '顶不住', '油耗哗哗的', '油耗很高',
                                        '不见得省'],
                                 '空间': ['不敢恭维', '没宽敞', '不咋地', '后排空间小了点', '不行', '较小', '抓狂', '显小',
                                        '后排挤', '钻进去', '不满意', '不大', '只要是空间小', '小了点', '空间不行', '不舒服',
                                        '轴距和空间严重不符', '完败', '有异响', '别奢望', '真的是', '·没有那么大', '有点小',
                                        '小', '硬伤', '差', '太小了', '真不喜欢', '太小', '小一点'],
                                 '舒适性': ['隔音差', '隔音太差', '风噪最大', '滴水现象', '有问题打不开', '较差', '气味呛人',
                                         '个隔音，胎噪件15万的车都不如。听着心烦', '视野不如森', '忽悠 容易晕车', '空调不咋样',
                                         '受不了', '风噪真心大', '颈椎有点累 ', '速度快噪音大', '响', '空调不制冷',
                                         '不是很舒适', '出问题', '大', '气门声音大    ', '异响多', '原胎声音我是受不了', '差',
                                         '颠簸', '噪音大', '空调问题', '隔音效果一般', '声音很大', '抖抖', ' 金属撞击响声特别大',
                                         '硬', '确实不好', '乱响', '异响比较多', '很烦', '不严实 ', '比不过', '耳朵不好了',
                                         '不支持', '异响', '很差', '抖', '不严实', '震', '俩车隔音都不算太好', '难受', '大不少',
                                         '噪音', '有噪音', '抖动', '质量很差', '开着累', '不舒服、异响', '开空调没劲', '大些',
                                         '唯一不足', '音响太差', '座椅有点臭', '土腥味', '摩擦音', '风噪大', '不舒服',
                                         'X1的座椅小的可怜', '噪音依旧', '噪音烦透了', '噪音变大', '噪音较大', '滋滋声',
                                         '特别抖', '噪音偏大', '味特别大', '卡顿', '扯淡', '就别想了', '有味', ' 格叽格叽响',
                                         '腰疼', '不咋地', '颠', '坑', '不行', '不会小', '更吵', '差一点', '偏低',
                                         '发动机噪音确实大', '差多了', '后排太硬。', '声音大', '各种响', '有异响', '隔音不好',
                                         '有金属敲击的声音', '发出声音', '比较差', '内部味道较大', '风噪是大了点', '有点影响',
                                         '隔音还不如森', '毛病多']}

        self.aspect_pos_words = {'动力': ['猛', '加速快', '非常好', '不是好了一点点', '好动力', '水平对置发动机原来这么稳',
                                        '不后悔', '足够', '堪比跑车', '没有问题', '少', '信心满满', '强劲', '已经很好了',
                                        '有点性能', '开着爽', '好很很多', '不错', '很舒适', '反应敏捷', '无损耗', '很够用',
                                        '足', '水平对置发动机就是轻啊', '着迷', '驾驶质感强', '轻盈', '强很多', '破百',
                                        '耐用', '非常不错', '好一些', '没有', '真的不错', '不为别的，就为了中控台和空间',
                                        '用不完的劲', '灵敏', '牛', '牛逼', '足够了', '没烧', '够了', '提速快', '改观不少',
                                        '爽', '排量大', '比直列的要轻很多', '可以的', '好不少', '好', '提速满意', '不烧',
                                        '强点', '够', '加速不错', '胜出', '动力强多', '没情况', '好很多', '发动机是好',
                                        '老牛逼。', '还行', '坦克也没有欧蓝德好', '水平对置发动机 全时四驱是最大卖点',
                                        '算我输', '性能高一点', '比以前快', '有所提升', '给力', '效果不错', '四驱旅行',
                                        '够用', '强', '用的很好', '更高', '优', '很少', '干净', '超车', '动力强很多',
                                        '加速好点', '相当给力', '喜欢', '打95分', '动力为王', '性能强', '可以', '强些',
                                        '不漏', '轻松', '没问题', '优势明显', '不烧机油', '发动机很新啊', '不差', '超过',
                                        '没有烧机油', '确实好', '杠杠的', '动力更好', '太给力了', '性能好', '加强', '舒服',
                                        '将开启汽车动力的新篇章', '加速轻轻松松', '稳定', '发动机不错', '秒杀', '高', '升级',
                                        '非常猛', '可靠', '全时四驱', '扯淡', '动力好点', '提高', '高原小霸王', '省心',
                                        '动力牛', '噪音很小', '是好车', '完全够用', '还不错', '没见过跑14万还有那么好的机器',
                                        '很爽', '动力足', '没感觉', '满意', '无敌', '还可以', '四驱无敌', '最好',
                                        '发动机专家', '拔尖', '好太多', '追不上', '有动力', '随叫随到', '啥都好',
                                        '车挺好', '动力也够了', '不能比拟', '不少机油', '很喜欢', '动力和空间太诱惑了！',
                                        '充足', '甩n条街', '动力响应更好', '更足', '太好了', '出色', '没得说', '好点',
                                        '更强', '动力不错', '好的多', '均衡'],
                                 '价格': ['值', '再贵的车也没有欧蓝德好', '可以的', '优惠不错', '不高', '不贵', '最好',
                                        '费用不高', '性价比高', '比较低的', '还便宜', '低', '价格很合适了', '相当不错',
                                        '找不出第二辆', '合理', '操控满意', '便宜', '优惠幅度不小', '实惠', '下降',
                                        '不能比的', '价格不够', '优惠力度还是可以的 ', '便宜很多', '优惠小', '便宜些',
                                        '价格好', '这个价格也超级优惠', '愉快', '高', '很不错', '很良心', '价格不错',
                                        '真心便宜，秒杀对手   ', '不会后悔', '合适'],
                                 '内饰': ['提升太多', '细', '内饰也好看', '好不少', '好', '喜欢', '豪华感强', '做工好',
                                        '对口味', '还可以', '帅', '内饰豪华', '保持偏硬的造型', '保值耐用', '内饰绝对豪华',
                                        '简约的很', '认可度高', '好看，炫酷', '提升', '高出一个档次', '用料不错', '骚',
                                        '内饰也可以', '还过的去', '不错', '中上游', '简洁干练', '内饰科技感高', '不逊于',
                                        '有提升', '更好', '坐进去最放松的', '比森林人强不少', '品质不错', '符合', '比较好',
                                        '皮实耐用', '好了很多', '内饰真的提升', '记忆', '没的说', '真的不错', '设计上也是不错',
                                        '好一些', '秒杀', '高大上', '绝对值', '漂亮', '吊打', '强', '手感爆炸', '带喜感',
                                        '新', '要求一致', '好点', '可以保持', '好看', '才叫车', '胜出', '大改'],
                                 '配置': ['蛮好', '不错不错', '坦克也没有欧蓝德好', '丰富', '打80分', '只有优点，缺点几乎为零',
                                        '四驱好能安全一点 ', '不错', '已成绝唱', '整车也比较扎实', '都不错', '满意', '出色',
                                        '高', '蛮期待 SGP 对新森的影响', '压倒性的说欧蓝德更好', '真高', '一点问题都没有',
                                        '喜欢他的机械手刹', '实用', '超前', '胜出', '有点提升', '合适', '值', '秒杀',
                                        '不太喜欢', '新款厚重大气', '不后悔', '米其林3ST，安静，舒适', '厚道', '值得', '还可以',
                                        '强太多', '机械上还是很皮实的', '配置高', '很良心', '开着各方面都舒服', '均衡',
                                        '视野和通过性好', '够了', 'OK', '非常不错', '很好', '全', '提升', '肯定四驱欧蓝德好    ',
                                        '顶级', '好', '好用', '好的不是一点', '其他配置真心喜欢', '买它的机械性能', '不差',
                                        '比较合理'],
                                 '安全性': ['好', '最适合', '皮实', '超好用', '更扎实', '较好', '刹车脚感非常细腻，适合微操',
                                         '很高', '甩三条街', '不错', '卤素灯明显穿透力更强一些', '有效果', '算我输', '更硬',
                                         '耐用', '高', '第一', '强', '要求一致', '安全感极高', '还完刹车线性了，随踩随有挺好',
                                         '安全', '避震我觉得挺好，够硬', '喜欢他的机械手刹'],
                                 '外观': ['很耐看', '个人觉得比较好看', '外观不错', '喜欢', '好', '一次没修过', '对口味',
                                        '车的外形也漂亮', '喜欢森的外形', '底盘厉害', '保持偏硬的造型', '厚', '外观真心赞',
                                        '颜色和光线还可以', '降低', '高度都一样', '特别迷恋', '性价比', '颜值高', '时尚',
                                        '低调', '作用不大', '认可度高', '上了一个档次了，隐隐有豪华车的感觉', '帅气~',
                                        '大气，中规中矩！', '强化', '前脸设计看着精致，协调了', '不错', '社会社会！',
                                        ' 好看', '尊贵', '这么看确实大气点', '视野好', '挺炫', '逼格高', '秀气',
                                        '新款厚重大气', '喜欢这种前脸', '看中外观', '大', '合眼缘', '外形好看', '看着真舒服',
                                        '外形至少本人觉得新款还可以', '前网辨识度很高', '大气', '有面子', '真的不错', '秒杀',
                                        '硬朗', '前脸更好看', '吊打', '漂亮', '要求一致', '生猛', '很好', '好看', '前脸好看',
                                        '大改', '仍觉得好'],
                                 '操控': ['非常好', '好感', '操控感', '比较灵', '不后悔', '完美', '安心', '操控性不错', '优点',
                                        '操控性好很多', '有点性能', '犹如宝马一般', '不错', '更好', '不飘', '优势', '确实很棒',
                                        '着迷', '驾驶质感强', '破百', '牛逼', '牛', '操控不错', '就要这么开', '漂移', '可以的',
                                        '好', '基本可以', '较好', '好很多', '良好', '上了一个档次', '稳', '灵活', '符合',
                                        '性能高一点', '很稳', '没的说', '给力', '第一', '强', '值得', '很韧性', '很好', '灵巧',
                                        '略胜一筹', '操控真心不错', '不费劲', '优', '喜欢', '打95分', '挺稳的', '可以', '专业',
                                        '看点是操控', '蛮好', '舒适感强', '好用', '操控很棒', '完胜', '操控也好', '轻松',
                                        '没问题', '操纵好，底盘高', '底盘比新森强一些', '甩三条街', '更好更灵活', '不解释',
                                        '超过', '厉害', '好开', '性能好', '距离短', '闻名', '比较好', '舒服', '方向盘比较轻',
                                        '高', '升级', '可靠', '提高', '也不错', '操控很满意', '好性能',
                                        '没见过跑14万还有那么好的机器', '很准', '满意', '质量好', '无敌', '还可以', '忍住没改',
                                        '有', '追求', '最好', '无法比', '自信多了', '操控好', '相当好', '别纠结', '坐姿高',
                                        '挺棒', '紧凑', '肯定', '一流', '要求一致', '没得说', '好点', '胜出', '安全', '随性'],
                                 '油耗': ['满意', '废油', '好', '差不多', '不高', '可以', '相当棒', '也不高',
                                        '2.0森市区油耗真心不错，', '省油', '不一定费油', '正常', '省油的', '没有任何问题',
                                        '额外惊喜', '低', '够可以', '油耗也不高', '非常满意', '还行', '不会高', '值得拥有',
                                        '油耗下降', '不错', '没有任何油耗现象', '最低油耗5.9驾驶体验超级棒', '油耗好',
                                        '油耗高一个', '知足', '平顺自然', '无变化', '很低', '无毛病', '挺省油的',
                                        '油耗没那么高', '油耗水平已经很满意', '稳定', '给力', '效果不错', '耐用', '好一些',
                                        '这油耗牛啊', '油耗低一些', '惊喜', '不错的', '油耗低', '油耗真心棒', '省油不少 ',
                                        '胜出', '确实省', '很满意'],
                                 '空间': ['好', '非常好', '喜欢', '还可以', '差不多', '空间很满意', '大空间', '后备箱大',
                                         '空间较大', '空间/后座又宽，', '容量大', '挺大', '空间大很多', '都不错', '各方面都好些',
                                         '杀手锏', '是大的', '车体高', '很漂亮', '甩三条街', '还行', '不错', '变大', '大 ',
                                         '杠杠的', '满足', '更好', '坐进去最放松的', '空间坐姿都好点', '空间不小', '舒服',
                                         '宽大舒适', '不小', '大', '高点', '理想', '车内空间蛮大', '空间舒适没的说',
                                         '动力和空间太诱惑了！', '空间大动力可以', '较大后备箱', '够用',
                                         '不为别的，就为了中控台和空间', '空间大', '特大', '比森林人舒服多了',
                                         '相当的可以', '大了很多', '更方便', '空间有点', '舒服的很', '有保障', '有优势',
                                         '空间也大', '挺好的', '出色', '实用', '空间更大', '轴距也加长了更宽敞了',
                                         '好些', '胜出', '宽敞', '均衡'],
                                 '舒适性': ['提升太多', '满意', '坐姿高视线更好', '风力强劲', '好', '还可以', '非常好', '安静',
                                         '噪音低', '好听', '可以', '蛮好', '噪音减少', '好用', '感觉不错', '看中座椅记忆',
                                         '视野超级好，调好座椅秒杀一切SUV', '提高很多', '乘客舒适', '恒温', '制冷效果好',
                                         '制冷快', '不错', '分区空调', '厉害', '视野好', '空间坐姿都好点', '噪音小', '舒服',
                                         '很好用', '空调很牛逼', '给力', '空间舒适没的说', '有点提升', '静音', '空间舒适',
                                         '高', '空间大', '舒服安静', '视野和通过性好', '好点', '静音舒适',
                                         '可以了']}

        # configuration for `vdcnn` model, a very deep convolution neural network
        self.vd_depth = [4, 4, 10, 10]  # number of conv blocks with 64, 128, 256 & 512 filters, must be a list
        self.vd_pooling_type = 'maxpool'  # 3 different pooling types for halving the temporal resolution
        self.vd_use_shortcut = False  # whether use shortcut connection between conv blocks
        # self.use_he_uniform = True   # whether use he_uniform initializer

        self.merge_for_each = True

        # configuration for word embedding strategy
        self.embed_all_words = True
        self.optional_embed_types = ['w2vcu', 'fasttextcu', 'w2vcu_all', 'fasttextcu_all', 'glovecu', 'glovecu_all',
                                     'fasttextpred', 'fasttextpred_all', 'zhw2vpred', 'zhw2vpred_all',
                                     'tencentvpred', 'tencentvpred_all']

        self.embed_type = self.optional_embed_types[3]
        self.embed_trainable = True

        # self.embed_type = ['w2vcu_all', 'w2vcu_all']
        # self.embed_trainable = [True, False]

        self.word_combine_char = False
        self.max_chars_per_word = 6

        self.use_class_weight = True
        self.class_weight = {0: 1., 1: 10., 2: 1., 3: 10.}

        # configuration for predict file
        self.predict_with_rules = False
        self.predict_with_content = False

        self.add_word_feats = False
        self.num_word_feats = 0
        self.add_sentence_feat = False
        self.num_sent_feats = 0

        self.n_pos = 24
        self.pos_to_id = {'a': 0, 'ad': 0, 'ag': 0, 'an': 0, 'b': 1, 'c': 2, 'd': 3, 'df': 3, 'dg': 3, 'e': 4, 'f': 5,
                          'g': 6, 'h': 7, 'i': 8, 'j': 9, 'k': 10, 'l': 11, 'm': 12, 'mg': 12, 'mq': 12, 'n': 13,
                          'ng': 13, 'nr': 13, 'nrfg': 13, 'nrt': 13, 'ns': 13, 'nt': 13, 'nz': 13, 'o': 14, 'p': 15,
                          'q': 16, 'r': 17, 'rg': 17, 'rr': 17, 'rz': 17, 's': 18, 't': 18, 'tg': 18, 'u': 19, 'ud': 19,
                          'ug': 19, 'uj': 19, 'ul': 19, 'uv': 19, 'uz': 19, 'v': 20, 'vd': 20, 'vg': 20,
                          'vi': 20, 'vn': 20, 'vq': 20, 'x': 21, 'y': 22, 'z': 23, 'zg': 23}

        with codecs.open('lexicon/deny.txt', 'r', encoding='utf8') as reader:
            self.deny_lexicon = [line.strip() for line in reader]

        self.feat_all = False   # use word features based on all data set(True) or just on train data set(False)

        self.ensemble_model_type = None
        self.ensemble_input_len = 0
        self.ensemble_input_feat = ['model', 'tfidf', 'sen_feat', 'embed_avg']

    def one_hot_encoding(self, model_type, label):
        if model_type == 'aspect':      # aspect classification model
            label = list(label)
            return np.array([0 if value == -2 else 1 for value in label], dtype=int)   # multi-label
        elif model_type == 'senti':     # sentiment analysis model
            one_hot_vector = np.zeros(self.n_class[model_type], dtype=int)
            one_hot_vector[self.senti_polarity_to_class[label]] = 1
            return one_hot_vector
        elif model_type == 'joint':     # join model
            label = list(label)
            multi_hot_vector = np.zeros(self.n_class[model_type], dtype=int)
            for i in range(len(label)):
                multi_hot_vector[i * (self.n_senti_class + 1) + self.joint_polarity_to_class[label[i]]] = 1
            return multi_hot_vector
        return None
